{% extends "app/appbase.twig" %}

{% block title %}PaLMe Admin{% endblock %}
{% block head %}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/css/splide.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chartist@0.11.4/dist/chartist.min.css">
<style>
  .maintextarea img {
    max-width: 100%;
    max-height: 500px;
  }
  .splide img {
    max-height: 600px;
  }
</style>
{% endblock %}

{% block content %}
<div class="wrapper-2-col" style="gap: 0; padding-bottom: 0;">
  <div>
    <a href="#" style="float: right" class="btn iconbtn" onclick="share()"><i class="material-icons">share</i> Link teilen</a>
    <a href="/app/awards/{{award.id}}"><i class="material-icons">arrow_back</i> {{award.title}}</a>
    <h1 style="margin: 0.2em 0;">{{candidate.name}}</h1>
  </div>
</div>
<div class="wrapper-2-col" v-scope>
  <div class="grid-col left">
    {% if candidate.CandidateImages|length > 0 %}
      <div class="card mb" style="padding: 0;">
        <div class="splide">
          <div class="splide__track">
            <ul class="splide__list">
              {% for image in candidate.CandidateImages %}
                <li class="splide__slide"><img src="/app/awards/image/{{image.id}}.{{image.type}}"></li>
              {% endfor %}
            </ul>
          </div>
        </div>
      </div>
    {% endif %}
    <div class="card maintextarea usertext">
      {{candidate.longDescriptionHtml | raw}}    
    </div>
    {% if isAdmin %}
      <br><a href="/app/admin/awards/{{award.id}}/candidates/{{candidate.id}}" class="btn iconbtn"><i class="material-icons">edit</i> bearbeiten</a>
    {% endif %}
  </div>
  <div class="grid-col right">
    <div class="card mb">
      <h2>Abstimmung</h2>
      <div class="award-vote-chart"></div>
    </div>
    {% if not userVote and isLoggedIn %}
      {% if award.beforeDeadline %}
        <strong>Du hast noch nicht abgestimmt.</strong>
        <a href="/app/awards/{{award.id}}/candidates/{{candidate.id}}/vote" class="btn iconbtn important"><i class="material-icons">task_alt</i> F체r {{candidate.name}} abstimmen</a><br><br>
      {% endif %}
    {% elseif userVote.AwardCandidateId==candidate.id %}
      <strong>Deine Stimme wurde f체r {{candidate.name}} gez채hlt.</strong>
    {% elseif isLoggedIn %}
      <strong>Deine Stimme gilt derzeit {{userVote.AwardCandidate.name}}.</strong>
      {% if award.beforeDeadline %}
        <a href="/app/awards/{{award.id}}/candidates/{{candidate.id}}/vote" class="btn iconbtn important"><i class="material-icons">task_alt</i> F체r {{candidate.name}} abstimmen</a><br><br>
      {% endif %}
    {% endif %}
    {% if not award.beforeDeadline %}
      <strong>Die Abstimmung ist beendet.</strong>
    {% endif %}
    {% for c in award.AwardCandidates %}
      <a href="/app/awards/{{award.id}}/candidates/{{c.id}}" class="block mb">
        <div class="card {% if userVote and userVote.AwardCandidateId==c.id %}voted{% endif %} {% if candidate.id==c.id %}highlight{% endif %}">
          <h3>{{c.name}}</h3>
          <p class="usertext">{{c.shortDescription}}</p>
        </div>
      </a>
    {% endfor %}
  </div>
</div>
{% endblock %}

{% block js %}
<script src="https://unpkg.com/petite-vue@0.4.1/dist/petite-vue.iife.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartist@0.11.4/dist/chartist.min.js"></script>
<script>
  {% if candidate.CandidateImages|length > 0 %}
  new Splide('.splide', {
    type: 'loop',
    height: '600px',
    focus: 'center',
    breakpoints: {
      400: {
        height: '200px'
      },
      600: {
        height: '300px'
      },
      800: {
        height: '400px'
      },
      1000: {
        height: '500px'
      }
    },
    autoWidth: true,
    autoplay: true
  }).mount()
  {% endif %}

  const voteData = {{voteCounts | json_encode | raw }}
  const chartData = {
    labels: voteData.map(c => c.AwardCandidate.name),
    series: [voteData.map(c => c.count)]
  }
  const winnerVotes = Math.max.apply(null, chartData.series[0])
  new Chartist.Bar('.award-vote-chart', chartData, {
    high: Math.max.apply(null, chartData.series[0]),
    low: 0,
    height: voteData.length * 50 + 'px',
    horizontalBars: true,
    axisX: {
      onlyInteger: true
    },
    chartPadding: {top: 0, right: 20, left: 70, bottom: 0}
  }).on('draw', function(data) {
    if(data.type === 'bar' && data.value.x === winnerVotes) {
      data.element.addClass('winner')
    }
  })

  const award = {{award | json_encode | raw }}
  const candidate = {{candidate | json_encode | raw }}
  PetiteVue.createApp({
  $delimiters: ['${', '}'],

  award,
  candidate

}).mount()


  const shareData = {
    title: "FSmed HD PaLMe: {{award.title}} - {{candidate.name}}",
    url: "{{currentUrl}}"
  }
  function share () {
    navigator.share(shareData)
    .catch(_ => {
      navigator.clipboard.writeText(shareData.url)
    })
  }
</script>
{% endblock %}