{% extends "base.twig" %}

{% block title %}Suche{% endblock %}

{% block content %}
  <div class="wrapper">
    <section>
      <h1>Suche</h1>
      <form method="GET">
        Prüfungstyp:
        <select name="examType" style="height: 32px; padding: 0 16px;">
          <option value="0">alle</option>
          {% for examType in examTypes %}
            <option value="{{examType.id}}" {% if examType.id == query.examType %}selected{% endif %}>{{examType.name}}</option>
          {% endfor %}
        </select><br><br>
        <div class="inputlabel">
          <label>Ort der Prüfung (Klinikum, Institut)</label>
          <input type="hidden" name="locationId" {% if query.locationId %}value="{{query.locationId}}"{% endif %}>
          <input type="text" name="location" data-autocomplete="location" placeholder="z.B. Uniklinikum" minlength="3" {% if query.location %}value="{{query.location}}"{% endif %}>
        </div><br>
        <div class="inputlabel">
          <label>Fach</label>
          <input type="hidden" name="subjectId" {% if query.subjectId %}value="{{query.subjectId}}"{% endif %}>
          <input type="text" name="subject" data-autocomplete="subject" placeholder="z.B. Anatomie" minlength="3" {% if query.subject %}value="{{query.subject}}"{% endif %}>
        </div><br>
        <div class="inputlabel">
          <label>Prüfer</label>
          <input type="hidden" name="examinerId" {% if query.examinerId %}value="{{query.examinerId}}"{% endif %}>
          <input type="text" name="examiner" data-autocomplete="examiner" placeholder="z.B. Joachim Kirsch" minlength="3" {% if query.examiner %}value="{{query.examiner}}"{% endif %}>
        </div><br>
        <button type="submit" class="important iconbtn"><i class="material-icons">search</i> suchen</button>
      </form><br><br>
      {% if results %}
      <a href="pdfmulti?exams={{multiDLIds}}&q={{multiDLquery}}" class="btn"><i class="material-icons">save</i> alle als PDF speichern</a>
      {% endif %}
      <ul>
        {% for result in results %}
          <li><a href="exam/{{result.id}}" class="main-text">{{result.readableDate}} - <strong>{{result.ExamType.name}}</strong>: {{result.subjects}}</a></li>
        {% endfor %}
      </ul>
    </section>
  </div>
{% endblock %}

{% block js %}
<script src="https://cdn.jsdelivr.net/npm/fuse.js@6.6.2/dist/fuse.min.js"></script>
<script type="text/javascript">
  atData = {
    examiner: new Fuse({{examiners | json_encode() | raw}}, {keys: ['name']}),
    subject: new Fuse({{subjects | json_encode() | raw}}, {keys: ['name']}),
    location: new Fuse({{locations | json_encode() | raw}}, {keys: ['name']})
  }

  let attachedField = null
  const autocompleteMenu = document.createElement('div')
  const autocompleteList = document.createElement('ul')
  autocompleteList.addEventListener('mousedown', e => {
    attachedField.value = e.target.textContent
    attachedField.previousElementSibling.value = e.target.dataset.id
  })
  autocompleteMenu.classList.add('autocomplete-menu')
  autocompleteMenu.appendChild(autocompleteList)

  autocompleteFields = document.querySelectorAll('[data-autocomplete]')
  for (let i = 0; i < autocompleteFields.length; i++) {
    const autocompleteField = autocompleteFields[i];
    autocompleteField.addEventListener('blur', hideAutocomplete)
    autocompleteField.addEventListener('focus', showAutocomplete)
    autocompleteField.addEventListener('input', e => {
      e.target.previousElementSibling.value = ''
      showAutocomplete(e)
    })
  }

  function hideAutocomplete () {
    autocompleteMenu.remove()
    attachedField = null
  }

  function showAutocomplete (e) {
    hideAutocomplete()
    if (e.target.value.length < 2) {
      return
    }
    attachedField = e.target
    console.log(e.target.value, atData[e.target.dataset.autocomplete])
    fillMenu(e.target.value, atData[e.target.dataset.autocomplete])
    e.target.parentElement.appendChild(autocompleteMenu)
  }

  function fillMenu (text, list) {
    const listelems = list.search(text).slice(0, 8).map(result => `<li data-id="${result.item.id}">${result.item.name}</li>`).join('')
    autocompleteList.innerHTML = listelems
  }
  
</script>
{% endblock %}